{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport axios from \"axios\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport BlogPosts from './BlogPosts';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: _defineProperty({\n      margin: '-30px auto 0',\n      justifyContent: 'center',\n      alignContent: 'center'\n    }, theme.breakpoints.down('sm'), {\n      marginTop: 0\n    }),\n    item: _defineProperty({\n      margin: 10,\n      maxHeight: 250,\n      overflow: 'hidden',\n      minWidth: 200\n    }, theme.breakpoints.down('sm'), {\n      maxHeight: 'unset'\n    }),\n    loader: {\n      width: '80%'\n    },\n    pagination: {\n      position: 'fixed',\n      bottom: 30\n    }\n  });\n}); // function Posts({ page, posts, setPage, setPagePosts }: any) {\n//     const classes = useStyles();\n//     React.useEffect(() => {\n//         if (!posts) {\n//             getPosts(page).then((posts) => setPagePosts(page, posts));\n//         }\n//     }, [page, posts, setPagePosts]);\n//     return (\n//         <Grid container spacing={2} className={classes.root}>\n//             { posts\n//                 ? posts.map((post: any, index: number) => (\n//                     <Grid container item spacing={2} xs={4} className={classes.item} key={`${page}-${index}`}>\n//                         <Post\n//                             title={post.title}\n//                             description={post.body}\n//                         />\n//                     </Grid>\n//                 ))\n//                 : <LinearProgress color=\"secondary\" className={classes.loader}/>}\n//             <Pagination\n//                 className={classes.pagination}\n//                 count={10}\n//                 color=\"secondary\"\n//                 page={page}\n//                 onChange={(event, value) => setPage(value)}\n//             />\n//         </Grid>\n//     );\n// }\n// const mapStateToProps = (state: any) => {\n//     return {\n//         page: state.posts.page,\n//         posts: state.posts.pages[state.posts.page],\n//     };\n// };\n// const mapDispatchToProps = (dispatch: any) => {\n//     return bindActionCreators({ setPage, setPagePosts }, dispatch);\n// };\n// export default connect(mapStateToProps, mapDispatchToProps)(Posts);\n\nvar FactsList = function FactsList() {\n  _s();\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      posts = _React$useState2[0],\n      setPosts = _React$useState2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(10),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentPage = _useState4[0],\n      setCurrentPage = _useState4[1];\n\n  useEffect(function () {\n    var fetchPosts = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.next = 3;\n                return axios.get(\"https://simple-blog-api.crew.red/posts\");\n\n              case 3:\n                res = _context.sent;\n                setPosts(res.data);\n                setLoading(false);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchPosts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchPosts();\n  }, []);\n  React.useEffect(function () {\n    axios.get(\"https://simple-blog-api.crew.red/posts\").then(function (response) {\n      setPosts(response.data);\n      console.log(response.data);\n    });\n  }, []);\n  var indexOfLastPost = currentPage * postsPerPage;\n  var indexOfFirstPost = indexPfLastPost - postsPerPage;\n  var currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, __jsx(BlogPosts, {\n    posts: posts,\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(FactsList, \"qrSXpQC0W6lEmoywstlXNXC5cL8=\", false, function () {\n  return [useStyles];\n});\n\n_c = FactsList;\nexport default FactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FactsList\");","map":{"version":3,"sources":["/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx"],"names":["React","useEffect","axios","createStyles","makeStyles","BlogPosts","useStyles","theme","root","margin","justifyContent","alignContent","breakpoints","down","marginTop","item","maxHeight","overflow","minWidth","loader","width","pagination","position","bottom","FactsList","classes","useState","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","fetchPosts","get","res","data","then","response","console","log","indexOfLastPost","postsPerPage","indexOfFirstPost","indexPfLastPost","currentPosts","slice"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport axios from \"axios\";\nimport ReactPaginate from 'react-paginate';\nimport {createStore} from \"../store/store\"\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { setPage, setPagePosts } from '../store/reducers/posts';\nimport { getPosts } from \"../utils/requests\";\nimport { Pagination } from '@material-ui/lab';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from \"@material-ui/core/Grid\";\nimport Post from \"./Post\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport BlogPosts from './BlogPosts';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            margin: '-30px auto 0',\n            justifyContent: 'center',\n            alignContent: 'center',\n            [theme.breakpoints.down('sm')]: {\n                marginTop: 0,\n            },\n        },\n        item: {\n            margin: 10,\n            maxHeight: 250,\n            overflow:'hidden',\n            minWidth: 200,\n            [theme.breakpoints.down('sm')]: {\n                maxHeight: 'unset',\n            },\n        },\n        loader: {\n            width: '80%',\n        },\n        pagination: {\n            position: 'fixed',\n            bottom: 30,\n        },\n    }),\n);\n\n// function Posts({ page, posts, setPage, setPagePosts }: any) {\n//     const classes = useStyles();\n\n//     React.useEffect(() => {\n//         if (!posts) {\n//             getPosts(page).then((posts) => setPagePosts(page, posts));\n//         }\n//     }, [page, posts, setPagePosts]);\n\n//     return (\n//         <Grid container spacing={2} className={classes.root}>\n//             { posts\n//                 ? posts.map((post: any, index: number) => (\n//                     <Grid container item spacing={2} xs={4} className={classes.item} key={`${page}-${index}`}>\n//                         <Post\n//                             title={post.title}\n//                             description={post.body}\n//                         />\n//                     </Grid>\n//                 ))\n//                 : <LinearProgress color=\"secondary\" className={classes.loader}/>}\n//             <Pagination\n//                 className={classes.pagination}\n//                 count={10}\n//                 color=\"secondary\"\n//                 page={page}\n//                 onChange={(event, value) => setPage(value)}\n//             />\n//         </Grid>\n//     );\n// }\n\n// const mapStateToProps = (state: any) => {\n//     return {\n//         page: state.posts.page,\n//         posts: state.posts.pages[state.posts.page],\n//     };\n// };\n\n// const mapDispatchToProps = (dispatch: any) => {\n//     return bindActionCreators({ setPage, setPagePosts }, dispatch);\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Posts);\n\n\nconst FactsList = () => {\n  const classes = useStyles();\n  const [posts, setPosts] = React.useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(10);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://simple-blog-api.crew.red/posts\");\n      setPosts(res.data);\n      setLoading(false);\n    }\n    fetchPosts();\n  }, []); \n\n  React.useEffect(() => {\n    axios.get(`https://simple-blog-api.crew.red/posts`)\n      .then(response => {\n        setPosts(response.data);\n        console.log(response.data);\n      });\n  }, []);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexPfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost)\n\n\n  return (\n    <div>\n      <BlogPosts posts={posts} loading={loading} />\n    </div>\n  );   \n}\n\nexport default FactsList;\n\n"]},"metadata":{},"sourceType":"module"}