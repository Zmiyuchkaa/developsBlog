{"ast":null,"code":"var _jsxFileName = \"/Users/olenarolskaya/FE/developsBlog/components/Users.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { setUsers } from '../store/reducers/users';\nimport { getUsers } from '../utils/requests';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport User from './User';\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    margin: '0 auto',\n    alignContent: 'center'\n  },\n  item: {\n    margin: 20,\n    maxHeight: 150,\n    overflow: 'hidden',\n    minWidth: 200,\n    [theme.breakpoints.down('sm')]: {\n      maxHeight: 'unset'\n    }\n  },\n  image: {\n    position: 'fixed',\n    bottom: 20,\n    right: 20,\n    width: '30%'\n  },\n  loader: {\n    width: '80%'\n  }\n}));\n\nfunction Users({\n  users,\n  setUsers\n}) {\n  const classes = useStyles();\n  React.useEffect(() => {\n    if (!users) {\n      getUsers().then(setUsers);\n    }\n  }, [users, setUsers]);\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, users ? users.map((user, index) => __jsx(Grid, {\n    container: true,\n    item: true,\n    spacing: 2,\n    xs: 3,\n    className: classes.item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, __jsx(User, {\n    key: index,\n    name: user.name,\n    index: index,\n    email: user.email,\n    description: user.company.catchPhrase,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }))) : __jsx(LinearProgress, {\n    color: \"secondary\",\n    className: classes.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }), __jsx(\"img\", {\n    src: process.env.PUBLIC_URL + '/images/plant2.svg',\n    alt: 'Plant',\n    title: 'Plant',\n    className: classes.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  const query = state.query;\n  const users = state.users ? state.users.filter(user => user.name.toLowerCase().includes(query.toLowerCase())) : state.users;\n  return {\n    users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setUsers: users => dispatch(setUsers(users))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","map":{"version":3,"sources":["/Users/olenarolskaya/FE/developsBlog/components/Users.tsx"],"names":["React","connect","setUsers","getUsers","LinearProgress","Grid","User","createStyles","makeStyles","useStyles","theme","root","margin","alignContent","item","maxHeight","overflow","minWidth","breakpoints","down","image","position","bottom","right","width","loader","Users","users","classes","useEffect","then","map","user","index","name","email","company","catchPhrase","process","env","PUBLIC_URL","mapStateToProps","state","query","filter","toLowerCase","includes","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { setUsers } from '../store/reducers/users';\nimport { getUsers } from '../utils/requests';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport User from './User';\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            margin: '0 auto',\n            alignContent: 'center',\n        },\n        item: {\n            margin: 20,\n            maxHeight: 150,\n            overflow:'hidden',\n            minWidth: 200,\n            [theme.breakpoints.down('sm')]: {\n                maxHeight: 'unset',\n            },\n        },\n        image: {\n            position: 'fixed',\n            bottom: 20,\n            right: 20,\n            width: '30%',\n        },\n        loader: {\n            width: '80%',\n        },\n    }),\n);\n\nfunction Users({ users, setUsers }: any) {\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        if (!users) {\n            getUsers().then(setUsers);\n        }\n    }, [users, setUsers]);\n\n    return (\n        <Grid container spacing={2} className={classes.root}>\n            { users\n                ? users.map((user: any, index: number) => (\n                    <Grid container item spacing={2} xs={3} className={classes.item}>\n                        <User\n                            key={index}\n                            name={user.name}\n                            index={index}\n                            email={user.email}\n                            description={user.company.catchPhrase}\n                        />\n                    </Grid>\n                ))\n                : <LinearProgress color=\"secondary\" className={classes.loader} />}\n            <img\n                src={process.env.PUBLIC_URL + '/images/plant2.svg'}\n                alt={'Plant'}\n                title={'Plant'}\n                className={classes.image}\n            />\n        </Grid>\n    );\n}\n\nconst mapStateToProps = (state: any) => {\n    const query = state.query;\n    const users = state.users\n        ? state.users.filter((user: any) => user.name.toLowerCase().includes(query.toLowerCase()))\n        : state.users;\n    return {\n        users,\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return {\n        setUsers: (users: any) => dispatch(setUsers(users)),\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);"]},"metadata":{},"sourceType":"module"}