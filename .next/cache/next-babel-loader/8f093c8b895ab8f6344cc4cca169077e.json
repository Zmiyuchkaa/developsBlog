{"ast":null,"code":"var _jsxFileName = \"/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { setPage, setPagePosts } from '../store/reducers/posts';\nimport { getPosts } from \"../utils/requests\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from \"@material-ui/core/Grid\";\nimport Post from \"./Post\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    margin: '-30px auto 0',\n    justifyContent: 'center',\n    alignContent: 'center',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: 0\n    }\n  },\n  item: {\n    margin: 10,\n    maxHeight: 250,\n    overflow: 'hidden',\n    minWidth: 200,\n    [theme.breakpoints.down('sm')]: {\n      maxHeight: 'unset'\n    }\n  },\n  loader: {\n    width: '80%'\n  },\n  pagination: {\n    position: 'fixed',\n    bottom: 30\n  }\n}));\n\nfunction Posts({\n  page,\n  posts,\n  setPage,\n  setPagePosts\n}) {\n  const classes = useStyles();\n  React.useEffect(() => {\n    if (!posts) {\n      getPosts(page).then(posts => setPagePosts(page, posts));\n    }\n  }, [page, posts, setPagePosts]);\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, posts ? posts.map((post, index) => __jsx(Grid, {\n    container: true,\n    item: true,\n    spacing: 2,\n    xs: 4,\n    className: classes.item,\n    key: `${page}-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, __jsx(Post, {\n    title: post.title,\n    description: post.body,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }))) : __jsx(LinearProgress, {\n    color: \"secondary\",\n    className: classes.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    page: state.posts.page,\n    posts: state.posts.pages[state.posts.page]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    setPage,\n    setPagePosts\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx"],"names":["React","bindActionCreators","connect","setPage","setPagePosts","getPosts","LinearProgress","Grid","Post","createStyles","makeStyles","useStyles","theme","root","margin","justifyContent","alignContent","breakpoints","down","marginTop","item","maxHeight","overflow","minWidth","loader","width","pagination","position","bottom","Posts","page","posts","classes","useEffect","then","map","post","index","title","body","mapStateToProps","state","pages","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,yBAAtC;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAA8C,0BAA9C;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,IACzBH,YAAY,CAAC;AACTI,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,cADN;AAEFC,IAAAA,cAAc,EAAE,QAFd;AAGFC,IAAAA,YAAY,EAAE,QAHZ;AAIF,KAACJ,KAAK,CAACK,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BC,MAAAA,SAAS,EAAE;AADiB;AAJ9B,GADG;AASTC,EAAAA,IAAI,EAAE;AACFN,IAAAA,MAAM,EAAE,EADN;AAEFO,IAAAA,SAAS,EAAE,GAFT;AAGFC,IAAAA,QAAQ,EAAC,QAHP;AAIFC,IAAAA,QAAQ,EAAE,GAJR;AAKF,KAACX,KAAK,CAACK,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BG,MAAAA,SAAS,EAAE;AADiB;AAL9B,GATG;AAkBTG,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GAlBC;AAqBTC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAE,OADF;AAERC,IAAAA,MAAM,EAAE;AAFA;AArBH,CAAD,CADY,CAA5B;;AA6BA,SAASC,KAAT,CAAe;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAe5B,EAAAA,OAAf;AAAwBC,EAAAA;AAAxB,CAAf,EAA4D;AACxD,QAAM4B,OAAO,GAAGrB,SAAS,EAAzB;AAEAX,EAAAA,KAAK,CAACiC,SAAN,CAAgB,MAAM;AAClB,QAAI,CAACF,KAAL,EAAY;AACR1B,MAAAA,QAAQ,CAACyB,IAAD,CAAR,CAAeI,IAAf,CAAqBH,KAAD,IAAW3B,YAAY,CAAC0B,IAAD,EAAOC,KAAP,CAA3C;AACH;AACJ,GAJD,EAIG,CAACD,IAAD,EAAOC,KAAP,EAAc3B,YAAd,CAJH;AAMA,SACI,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,SAAS,EAAE4B,OAAO,CAACnB,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMkB,KAAK,GACDA,KAAK,CAACI,GAAN,CAAU,CAACC,IAAD,EAAYC,KAAZ,KACR,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,IAAI,MAApB;AAAqB,IAAA,OAAO,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAwC,IAAA,SAAS,EAAEL,OAAO,CAACZ,IAA3D;AAAiE,IAAA,GAAG,EAAG,GAAEU,IAAK,IAAGO,KAAM,EAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AACI,IAAA,KAAK,EAAED,IAAI,CAACE,KADhB;AAEI,IAAA,WAAW,EAAEF,IAAI,CAACG,IAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADF,CADC,GASD,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAC,WAAtB;AAAkC,IAAA,SAAS,EAAEP,OAAO,CAACR,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVV,CADJ;AAcH;;AAED,MAAMgB,eAAe,GAAIC,KAAD,IAAgB;AACpC,SAAO;AACHX,IAAAA,IAAI,EAAEW,KAAK,CAACV,KAAN,CAAYD,IADf;AAEHC,IAAAA,KAAK,EAAEU,KAAK,CAACV,KAAN,CAAYW,KAAZ,CAAkBD,KAAK,CAACV,KAAN,CAAYD,IAA9B;AAFJ,GAAP;AAIH,CALD;;AAOA,MAAMa,kBAAkB,GAAIC,QAAD,IAAmB;AAC1C,SAAO3C,kBAAkB,CAAC;AAAEE,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAA4BwC,QAA5B,CAAzB;AACH,CAFD;;AAIA,eAAe1C,OAAO,CAACsC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cd,KAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { setPage, setPagePosts } from '../store/reducers/posts';\nimport { getPosts } from \"../utils/requests\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from \"@material-ui/core/Grid\";\nimport Post from \"./Post\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            margin: '-30px auto 0',\n            justifyContent: 'center',\n            alignContent: 'center',\n            [theme.breakpoints.down('sm')]: {\n                marginTop: 0,\n            },\n        },\n        item: {\n            margin: 10,\n            maxHeight: 250,\n            overflow:'hidden',\n            minWidth: 200,\n            [theme.breakpoints.down('sm')]: {\n                maxHeight: 'unset',\n            },\n        },\n        loader: {\n            width: '80%',\n        },\n        pagination: {\n            position: 'fixed',\n            bottom: 30,\n        },\n    }),\n);\n\nfunction Posts({ page, posts, setPage, setPagePosts }: any) {\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        if (!posts) {\n            getPosts(page).then((posts) => setPagePosts(page, posts));\n        }\n    }, [page, posts, setPagePosts]);\n\n    return (\n        <Grid container spacing={2} className={classes.root}>\n            { posts\n                ? posts.map((post: any, index: number) => (\n                    <Grid container item spacing={2} xs={4} className={classes.item} key={`${page}-${index}`}>\n                        <Post\n                            title={post.title}\n                            description={post.body}\n                        />\n                    </Grid>\n                ))\n                : <LinearProgress color=\"secondary\" className={classes.loader}/>}\n        </Grid>\n    );\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        page: state.posts.page,\n        posts: state.posts.pages[state.posts.page],\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return bindActionCreators({ setPage, setPagePosts }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);"]},"metadata":{},"sourceType":"module"}