{"ast":null,"code":"var _jsxFileName = \"/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { setPage, setPagePosts } from '../store/reducers/posts';\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Grid\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    margin: '-30px auto 0',\n    justifyContent: 'center',\n    alignContent: 'center',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: 0\n    }\n  },\n  item: {\n    margin: 10,\n    maxHeight: 250,\n    overflow: 'hidden',\n    minWidth: 200,\n    [theme.breakpoints.down('sm')]: {\n      maxHeight: 'unset'\n    }\n  },\n  loader: {\n    width: '80%'\n  },\n  pagination: {\n    position: 'fixed',\n    bottom: 30\n  }\n}));\n\nconst FactsList = () => {\n  const classes = useStyles();\n  const [posts, setPosts] = React.useState([]);\n  React.useEffect(() => {\n    axios.get(`https://cors-anywhere.herokuapp.com/cat-fact.herokuapp.com/facts`).then(response => {\n      setPosts(response.data.all);\n      console.log(response.data.all);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(Tooltip, {\n    placement: \"top-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    className: classes.nav,\n    component: Link,\n    to: '/',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Main\"))), __jsx(\"div\", {\n    className: classes.facts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, catFacts.slice(0, 21).map(catFact => __jsx(\"div\", {\n    className: \"facts-block__card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, __jsx(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(Typography, {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, catFact.text), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Liked by \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 88\n    }\n  }, catFact.upvotes), \" cat lovers\")), __jsx(Button, {\n    size: \"small\",\n    component: Link,\n    to: `/fact/${catFact._id}/`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Learn More\"))))));\n};\n\nexport default FactsList; // function Posts({ page, posts, setPage, setPagePosts }: any) {\n//     const classes = useStyles();\n//     React.useEffect(() => {\n//         if (!posts) {\n//             getPosts().then((posts) => setPagePosts(page, posts));\n//         }\n//     }, [page, posts, setPagePosts]);\n//     return (\n//         <Grid container spacing={2} className={classes.root}>\n//             { posts\n//                 ? posts.map((post: any, index: number) => (\n//                     <Grid container item spacing={2} xs={4} className={classes.item} key={`${page}-${index}`}>\n//                         <Post\n//                             title={post.title}\n//                             description={post.body}\n//                         />\n//                     </Grid>\n//                 ))\n//                 : <LinearProgress color=\"secondary\" className={classes.loader}/>}\n//         </Grid>\n//     );\n// }\n\nconst mapStateToProps = state => {\n  return {\n    page: state.posts.page,\n    posts: state.posts.pages[state.posts.page]\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    setPage,\n    setPagePosts\n  }, dispatch);\n}; // export default connect(mapStateToProps, mapDispatchToProps)(Posts);","map":{"version":3,"sources":["/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx"],"names":["React","bindActionCreators","setPage","setPagePosts","axios","Grid","Tooltip","createStyles","makeStyles","useStyles","theme","root","margin","justifyContent","alignContent","breakpoints","down","marginTop","item","maxHeight","overflow","minWidth","loader","width","pagination","position","bottom","FactsList","classes","posts","setPosts","useState","useEffect","get","then","response","data","all","console","log","nav","Link","facts","catFacts","slice","map","catFact","card","text","upvotes","_id","mapStateToProps","state","page","pages","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,yBAAtC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AAEA,SAAQC,YAAR,EAAsBC,UAAtB,QAA8C,0BAA9C;AAEA,MAAMC,SAAS,GAAGD,UAAU,CAAEE,KAAD,IACzBH,YAAY,CAAC;AACTI,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,cADN;AAEFC,IAAAA,cAAc,EAAE,QAFd;AAGFC,IAAAA,YAAY,EAAE,QAHZ;AAIF,KAACJ,KAAK,CAACK,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BC,MAAAA,SAAS,EAAE;AADiB;AAJ9B,GADG;AASTC,EAAAA,IAAI,EAAE;AACFN,IAAAA,MAAM,EAAE,EADN;AAEFO,IAAAA,SAAS,EAAE,GAFT;AAGFC,IAAAA,QAAQ,EAAC,QAHP;AAIFC,IAAAA,QAAQ,EAAE,GAJR;AAKF,KAACX,KAAK,CAACK,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC5BG,MAAAA,SAAS,EAAE;AADiB;AAL9B,GATG;AAkBTG,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GAlBC;AAqBTC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAE,OADF;AAERC,IAAAA,MAAM,EAAE;AAFA;AArBH,CAAD,CADY,CAA5B;;AA8BA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoB9B,KAAK,CAAC+B,QAAN,CAAe,EAAf,CAA1B;AAEA/B,EAAAA,KAAK,CAACgC,SAAN,CAAgB,MAAM;AACpB5B,IAAAA,KAAK,CAAC6B,GAAN,CAAW,kEAAX,EACGC,IADH,CACQC,QAAQ,IAAI;AAChBL,MAAAA,QAAQ,CAACK,QAAQ,CAACC,IAAT,CAAcC,GAAf,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACC,IAAT,CAAcC,GAA1B;AACD,KAJH;AAKD,GAND,EAMG,EANH;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAET,OAAO,CAACY,GAA3B;AAAgC,IAAA,SAAS,EAAEC,IAA3C;AAAiD,IAAA,EAAE,EAAE,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADJ,CADF,EAME;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACc,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCC,QAAQ,CAACC,KAAT,CAAe,CAAf,EAAkB,EAAlB,EAAsBC,GAAtB,CAA0BC,OAAO,IAC/D;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAElB,OAAO,CAACmB,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,SAAS,EAAEnB,OAAO,CAACoB,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCF,OAAO,CAACE,IAA9C,CADF,EAEE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAC,eAAlC;AAAkD,IAAA,SAAS,EAAC,GAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAyE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,OAAO,CAACG,OAAZ,CAAzE,gBAFF,CADF,EAKE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,SAAS,EAAER,IAAhC;AAAsC,IAAA,EAAE,EAAG,SAAQK,OAAO,CAACI,GAAI,GAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,CADF,CAD8B,CAAhC,CANF,CADF;AAqBD,CAjCD;;AAmCA,eAAevB,SAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMwB,eAAe,GAAIC,KAAD,IAAgB;AACpC,SAAO;AACHC,IAAAA,IAAI,EAAED,KAAK,CAACvB,KAAN,CAAYwB,IADf;AAEHxB,IAAAA,KAAK,EAAEuB,KAAK,CAACvB,KAAN,CAAYyB,KAAZ,CAAkBF,KAAK,CAACvB,KAAN,CAAYwB,IAA9B;AAFJ,GAAP;AAIH,CALD;;AAOA,MAAME,kBAAkB,GAAIC,QAAD,IAAmB;AAC1C,SAAOvD,kBAAkB,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAA4BqD,QAA5B,CAAzB;AACH,CAFD,C,CAIA","sourcesContent":["import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { setPage, setPagePosts } from '../store/reducers/posts';\nimport { getPosts } from \"../utils/requests\";\nimport axios from \"axios\";\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Grid\";\nimport Post from \"./Post\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            margin: '-30px auto 0',\n            justifyContent: 'center',\n            alignContent: 'center',\n            [theme.breakpoints.down('sm')]: {\n                marginTop: 0,\n            },\n        },\n        item: {\n            margin: 10,\n            maxHeight: 250,\n            overflow:'hidden',\n            minWidth: 200,\n            [theme.breakpoints.down('sm')]: {\n                maxHeight: 'unset',\n            },\n        },\n        loader: {\n            width: '80%',\n        },\n        pagination: {\n            position: 'fixed',\n            bottom: 30,\n        },\n    }),\n);\n\n\nconst FactsList = () => {\n  const classes = useStyles();\n  const [posts, setPosts] = React.useState([]);\n\n  React.useEffect(() => {\n    axios.get(`https://cors-anywhere.herokuapp.com/cat-fact.herokuapp.com/facts`)\n      .then(response => {\n        setPosts(response.data.all);\n        console.log(response.data.all);\n      });\n  }, []);\n\n  return (\n    <div>\n      <Grid item>\n          <Tooltip placement=\"top-start\">\n            <Button className={classes.nav} component={Link} to={'/'}>Main</Button>\n          </Tooltip>\n        </Grid>\n      <div className={classes.facts}>{catFacts.slice(0, 21).map(catFact =>\n        <div className='facts-block__card'>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography className={classes.text}>{catFact.text}</Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Liked by <b>{catFact.upvotes}</b> cat lovers</Typography>\n            </CardContent>\n            <Button size=\"small\" component={Link} to={`/fact/${catFact._id}/`}>Learn More</Button>\n          </Card>\n        </div>\n      )}\n      </div>\n    </div>\n  );   \n}\n\nexport default FactsList;\n\n// function Posts({ page, posts, setPage, setPagePosts }: any) {\n//     const classes = useStyles();\n\n//     React.useEffect(() => {\n//         if (!posts) {\n//             getPosts().then((posts) => setPagePosts(page, posts));\n//         }\n//     }, [page, posts, setPagePosts]);\n\n//     return (\n//         <Grid container spacing={2} className={classes.root}>\n//             { posts\n//                 ? posts.map((post: any, index: number) => (\n//                     <Grid container item spacing={2} xs={4} className={classes.item} key={`${page}-${index}`}>\n//                         <Post\n//                             title={post.title}\n//                             description={post.body}\n//                         />\n//                     </Grid>\n//                 ))\n//                 : <LinearProgress color=\"secondary\" className={classes.loader}/>}\n//         </Grid>\n//     );\n// }\n\nconst mapStateToProps = (state: any) => {\n    return {\n        page: state.posts.page,\n        posts: state.posts.pages[state.posts.page],\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return bindActionCreators({ setPage, setPagePosts }, dispatch);\n};\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Posts);"]},"metadata":{},"sourceType":"module"}