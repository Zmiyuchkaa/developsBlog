{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { setPage, setPagePosts } from '../store/reducers/posts';\nimport { getPosts } from \"../utils/requests\";\nimport { Pagination } from '@material-ui/lab';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from \"@material-ui/core/Grid\";\nimport Post from \"./Post\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: _defineProperty({\n      margin: '-30px auto 0',\n      justifyContent: 'center',\n      alignContent: 'center'\n    }, theme.breakpoints.down('sm'), {\n      marginTop: 0\n    }),\n    item: _defineProperty({\n      margin: 10,\n      maxHeight: 250,\n      overflow: 'hidden',\n      minWidth: 200\n    }, theme.breakpoints.down('sm'), {\n      maxHeight: 'unset'\n    }),\n    loader: {\n      width: '80%'\n    },\n    pagination: {\n      position: 'fixed',\n      bottom: 30\n    }\n  });\n});\n\nfunction Posts(_ref) {\n  _s();\n\n  var _this = this;\n\n  var page = _ref.page,\n      posts = _ref.posts,\n      setPage = _ref.setPage,\n      setPagePosts = _ref.setPagePosts;\n  var classes = useStyles();\n  React.useEffect(function () {\n    if (!posts) {\n      getPosts(page).then(function (posts) {\n        return setPagePosts(page, posts);\n      });\n    }\n  }, [page, posts, setPagePosts]);\n  return __jsx(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, posts ? posts.map(function (post, index) {\n    return __jsx(Grid, {\n      container: true,\n      item: true,\n      spacing: 2,\n      xs: 4,\n      className: classes.item,\n      key: \"\".concat(page, \"-\").concat(index),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, __jsx(Post, {\n      title: post.title,\n      description: post.body,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }));\n  }) : __jsx(LinearProgress, {\n    color: \"secondary\",\n    className: classes.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }), __jsx(Pagination, {\n    className: classes.pagination,\n    count: 10,\n    color: \"secondary\",\n    page: page,\n    onChange: function onChange(event, value) {\n      return setPage(value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(Posts, \"OAQf9SHEQQsOOZKjohcuI3tGtQ0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Posts;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    page: state.posts.page,\n    posts: state.posts.pages[state.posts.page]\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setPage: setPage,\n    setPagePosts: setPagePosts\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts); // const FactsList = () => {\n//   const classes = useStyles();\n//   const [posts, setPosts] = React.useState([]);\n//   React.useEffect(() => {\n//     axios.get(`https://simple-blog-api.crew.red/posts`)\n//       .then(response => {\n//         setPosts(response.data);\n//         console.log(response.data);\n//       });\n//   }, []);\n//   return (\n//     <div>\n//       <div>{posts.slice(0, 21).map(post =>\n//         <div>\n//           <div>\n//             <div>\n//               <div>{post.title}</div>\n//               <div>{post.body}</div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//       </div>\n//     </div>\n//   );   \n// }\n// export default FactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx"],"names":["React","bindActionCreators","connect","setPage","setPagePosts","getPosts","Pagination","LinearProgress","Grid","Post","createStyles","makeStyles","useStyles","theme","root","margin","justifyContent","alignContent","breakpoints","down","marginTop","item","maxHeight","overflow","minWidth","loader","width","pagination","position","bottom","Posts","page","posts","classes","useEffect","then","map","post","index","title","body","event","value","mapStateToProps","state","pages","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { setPage, setPagePosts } from '../store/reducers/posts';\nimport { getPosts } from \"../utils/requests\";\nimport { Pagination } from '@material-ui/lab';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from \"@material-ui/core/Grid\";\nimport Post from \"./Post\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            margin: '-30px auto 0',\n            justifyContent: 'center',\n            alignContent: 'center',\n            [theme.breakpoints.down('sm')]: {\n                marginTop: 0,\n            },\n        },\n        item: {\n            margin: 10,\n            maxHeight: 250,\n            overflow:'hidden',\n            minWidth: 200,\n            [theme.breakpoints.down('sm')]: {\n                maxHeight: 'unset',\n            },\n        },\n        loader: {\n            width: '80%',\n        },\n        pagination: {\n            position: 'fixed',\n            bottom: 30,\n        },\n    }),\n);\n\nfunction Posts({ page, posts, setPage, setPagePosts }: any) {\n    const classes = useStyles();\n\n    React.useEffect(() => {\n        if (!posts) {\n            getPosts(page).then((posts) => setPagePosts(page, posts));\n        }\n    }, [page, posts, setPagePosts]);\n\n    return (\n        <Grid container spacing={2} className={classes.root}>\n            { posts\n                ? posts.map((post: any, index: number) => (\n                    <Grid container item spacing={2} xs={4} className={classes.item} key={`${page}-${index}`}>\n                        <Post\n                            title={post.title}\n                            description={post.body}\n                        />\n                    </Grid>\n                ))\n                : <LinearProgress color=\"secondary\" className={classes.loader}/>}\n            <Pagination\n                className={classes.pagination}\n                count={10}\n                color=\"secondary\"\n                page={page}\n                onChange={(event, value) => setPage(value)}\n            />\n        </Grid>\n    );\n}\n\nconst mapStateToProps = (state: any) => {\n    return {\n        page: state.posts.page,\n        posts: state.posts.pages[state.posts.page],\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return bindActionCreators({ setPage, setPagePosts }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);\n\n\n// const FactsList = () => {\n//   const classes = useStyles();\n//   const [posts, setPosts] = React.useState([]);\n\n//   React.useEffect(() => {\n//     axios.get(`https://simple-blog-api.crew.red/posts`)\n//       .then(response => {\n//         setPosts(response.data);\n//         console.log(response.data);\n//       });\n//   }, []);\n\n//   return (\n//     <div>\n//       <div>{posts.slice(0, 21).map(post =>\n//         <div>\n//           <div>\n//             <div>\n//               <div>{post.title}</div>\n//               <div>{post.body}</div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n//       </div>\n//     </div>\n//   );   \n// }\n\n// export default FactsList;\n\n"]},"metadata":{},"sourceType":"module"}