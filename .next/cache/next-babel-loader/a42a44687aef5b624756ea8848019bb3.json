{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { setPage, setPagePosts } from '../store/reducers/posts';\nimport axios from \"axios\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Grid\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: _defineProperty({\n      margin: '-30px auto 0',\n      justifyContent: 'center',\n      alignContent: 'center'\n    }, theme.breakpoints.down('sm'), {\n      marginTop: 0\n    }),\n    item: _defineProperty({\n      margin: 10,\n      maxHeight: 250,\n      overflow: 'hidden',\n      minWidth: 200\n    }, theme.breakpoints.down('sm'), {\n      maxHeight: 'unset'\n    }),\n    loader: {\n      width: '80%'\n    },\n    pagination: {\n      position: 'fixed',\n      bottom: 30\n    }\n  });\n});\n\nvar FactsList = function FactsList() {\n  _s();\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      posts = _React$useState2[0],\n      setPosts = _React$useState2[1];\n\n  React.useEffect(function () {\n    axios.get(\"https://cors-anywhere.herokuapp.com/cat-fact.herokuapp.com/facts\").then(function (response) {\n      setPosts(response.data.all);\n      console.log(response.data.all);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(Tooltip, {\n    placement: \"top-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    className: classes.nav,\n    component: Link,\n    to: '/',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Main\"))), __jsx(\"div\", {\n    className: classes.facts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, catFacts.slice(0, 21).map(function (catFact) {\n    return __jsx(\"div\", {\n      className: \"facts-block__card\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, __jsx(Card, {\n      className: classes.card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, __jsx(CardContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, __jsx(Typography, {\n      className: classes.text,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, catFact.text), __jsx(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Liked by \", __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 88\n      }\n    }, catFact.upvotes), \" cat lovers\")), __jsx(Button, {\n      size: \"small\",\n      component: Link,\n      to: \"/fact/\".concat(catFact._id, \"/\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Learn More\")));\n  })));\n};\n\n_s(FactsList, \"0IrisdAEFk18bWZ8wxUF2aI0j/Y=\", false, function () {\n  return [useStyles];\n});\n\n_c = FactsList;\nexport default FactsList; // function Posts({ page, posts, setPage, setPagePosts }: any) {\n//     const classes = useStyles();\n//     React.useEffect(() => {\n//         if (!posts) {\n//             getPosts().then((posts) => setPagePosts(page, posts));\n//         }\n//     }, [page, posts, setPagePosts]);\n//     return (\n//         <Grid container spacing={2} className={classes.root}>\n//             { posts\n//                 ? posts.map((post: any, index: number) => (\n//                     <Grid container item spacing={2} xs={4} className={classes.item} key={`${page}-${index}`}>\n//                         <Post\n//                             title={post.title}\n//                             description={post.body}\n//                         />\n//                     </Grid>\n//                 ))\n//                 : <LinearProgress color=\"secondary\" className={classes.loader}/>}\n//         </Grid>\n//     );\n// }\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    page: state.posts.page,\n    posts: state.posts.pages[state.posts.page]\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    setPage: setPage,\n    setPagePosts: setPagePosts\n  }, dispatch);\n}; // export default connect(mapStateToProps, mapDispatchToProps)(Posts);\n\n\nvar _c;\n\n$RefreshReg$(_c, \"FactsList\");","map":{"version":3,"sources":["/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx"],"names":["React","bindActionCreators","setPage","setPagePosts","axios","Grid","Tooltip","createStyles","makeStyles","useStyles","theme","root","margin","justifyContent","alignContent","breakpoints","down","marginTop","item","maxHeight","overflow","minWidth","loader","width","pagination","position","bottom","FactsList","classes","useState","posts","setPosts","useEffect","get","then","response","data","all","console","log","nav","Link","facts","catFacts","slice","map","catFact","card","text","upvotes","_id","mapStateToProps","state","page","pages","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { setPage, setPagePosts } from '../store/reducers/posts';\nimport { getPosts } from \"../utils/requests\";\nimport axios from \"axios\";\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from \"@material-ui/core/Grid\";\nimport Tooltip from \"@material-ui/core/Grid\";\nimport Post from \"./Post\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            margin: '-30px auto 0',\n            justifyContent: 'center',\n            alignContent: 'center',\n            [theme.breakpoints.down('sm')]: {\n                marginTop: 0,\n            },\n        },\n        item: {\n            margin: 10,\n            maxHeight: 250,\n            overflow:'hidden',\n            minWidth: 200,\n            [theme.breakpoints.down('sm')]: {\n                maxHeight: 'unset',\n            },\n        },\n        loader: {\n            width: '80%',\n        },\n        pagination: {\n            position: 'fixed',\n            bottom: 30,\n        },\n    }),\n);\n\n\nconst FactsList = () => {\n  const classes = useStyles();\n  const [posts, setPosts] = React.useState([]);\n\n  React.useEffect(() => {\n    axios.get(`https://cors-anywhere.herokuapp.com/cat-fact.herokuapp.com/facts`)\n      .then(response => {\n        setPosts(response.data.all);\n        console.log(response.data.all);\n      });\n  }, []);\n\n  return (\n    <div>\n      <Grid item>\n          <Tooltip placement=\"top-start\">\n            <Button className={classes.nav} component={Link} to={'/'}>Main</Button>\n          </Tooltip>\n        </Grid>\n      <div className={classes.facts}>{catFacts.slice(0, 21).map(catFact =>\n        <div className='facts-block__card'>\n          <Card className={classes.card}>\n            <CardContent>\n              <Typography className={classes.text}>{catFact.text}</Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">Liked by <b>{catFact.upvotes}</b> cat lovers</Typography>\n            </CardContent>\n            <Button size=\"small\" component={Link} to={`/fact/${catFact._id}/`}>Learn More</Button>\n          </Card>\n        </div>\n      )}\n      </div>\n    </div>\n  );   \n}\n\nexport default FactsList;\n\n// function Posts({ page, posts, setPage, setPagePosts }: any) {\n//     const classes = useStyles();\n\n//     React.useEffect(() => {\n//         if (!posts) {\n//             getPosts().then((posts) => setPagePosts(page, posts));\n//         }\n//     }, [page, posts, setPagePosts]);\n\n//     return (\n//         <Grid container spacing={2} className={classes.root}>\n//             { posts\n//                 ? posts.map((post: any, index: number) => (\n//                     <Grid container item spacing={2} xs={4} className={classes.item} key={`${page}-${index}`}>\n//                         <Post\n//                             title={post.title}\n//                             description={post.body}\n//                         />\n//                     </Grid>\n//                 ))\n//                 : <LinearProgress color=\"secondary\" className={classes.loader}/>}\n//         </Grid>\n//     );\n// }\n\nconst mapStateToProps = (state: any) => {\n    return {\n        page: state.posts.page,\n        posts: state.posts.pages[state.posts.page],\n    };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n    return bindActionCreators({ setPage, setPagePosts }, dispatch);\n};\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Posts);"]},"metadata":{},"sourceType":"module"}