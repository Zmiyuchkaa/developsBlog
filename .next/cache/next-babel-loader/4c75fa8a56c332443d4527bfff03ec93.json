{"ast":null,"code":"var _jsxFileName = \"/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BlogPosts from './BlogPosts';\nimport Pagination from './Pagination';\nconst useStyles = makeStyles(theme => ({\n  pagination: {\n    position: 'fixed',\n    bottom: 30\n  }\n}));\n\nconst FactsList = () => {\n  const classes = useStyles();\n  const [posts, setPosts] = React.useState([]);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: postsPerPage\n  } = useState(10);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://simple-blog-api.crew.red/posts\");\n      setPosts(res.data);\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []); // React.useEffect(() => {\n  //   axios.get(`https://simple-blog-api.crew.red/posts`)\n  //     .then(response => {\n  //       setPosts(response.data);\n  //       console.log(response.data);\n  //     });\n  // }, []);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(BlogPosts, {\n    posts: currentPosts,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), __jsx(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    pagination: pagination,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FactsList;","map":{"version":3,"sources":["/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx"],"names":["React","useEffect","useState","axios","makeStyles","BlogPosts","Pagination","useStyles","theme","pagination","position","bottom","FactsList","classes","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","fetchPosts","res","get","data","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAUA,SAAsBC,UAAtB,QAA8C,0BAA9C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;AACrCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,QAAQ,EAAE,OADF;AAERC,IAAAA,MAAM,EAAE;AAFA;AADyB,CAAL,CAAN,CAA5B;;AASA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBf,KAAK,CAACE,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM;AAAA,OAACc,OAAD;AAAA,OAAUC;AAAV,MAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACgB,WAAD;AAAA,OAAcC;AAAd,MAAgCjB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM;AAAA,OAACkB;AAAD,MAAiBlB,QAAQ,CAAC,EAAD,CAA/B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMoB,UAAU,GAAG,YAAY;AAC7BJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMK,GAAG,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CAAU,wCAAV,CAAlB;AACAR,MAAAA,QAAQ,CAACO,GAAG,CAACE,IAAL,CAAR;AACAP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KALD;;AAMAI,IAAAA,UAAU;AACX,GARQ,EAQN,EARM,CAAT,CAPsB,CAiBtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMI,eAAe,GAAGP,WAAW,GAAGE,YAAtC;AACA,QAAMM,gBAAgB,GAAGD,eAAe,GAAGL,YAA3C;AACA,QAAMO,YAAY,GAAGb,KAAK,CAACc,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB;;AACA,QAAMI,QAAQ,GAAGC,UAAU,IAAIX,cAAc,CAACW,UAAD,CAA7C;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEH,YAAlB;AAAgC,IAAA,OAAO,EAAEX,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AACE,IAAA,YAAY,EAAEI,YADhB;AAEE,IAAA,UAAU,EAAEN,KAAK,CAACiB,MAFpB;AAGE,IAAA,UAAU,EAAEtB,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CAxCD;;AA0CA,eAAeG,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport ReactPaginate from 'react-paginate';\nimport {createStore} from \"../store/store\"\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { setPage, setPagePosts } from '../store/reducers/posts';\nimport { getPosts } from \"../utils/requests\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from \"@material-ui/core/Grid\";\nimport Post from \"./Post\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport BlogPosts from './BlogPosts';\nimport Pagination from './Pagination';\n\nconst useStyles = makeStyles(theme => ({\n  pagination: {\n      position: 'fixed',\n      bottom: 30,\n  },\n  }),\n);\n\n\nconst FactsList = () => {\n  const classes = useStyles();\n  const [posts, setPosts] = React.useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://simple-blog-api.crew.red/posts\");\n      setPosts(res.data);\n      setLoading(false);\n    }\n    fetchPosts();\n  }, []); \n\n  // React.useEffect(() => {\n  //   axios.get(`https://simple-blog-api.crew.red/posts`)\n  //     .then(response => {\n  //       setPosts(response.data);\n  //       console.log(response.data);\n  //     });\n  // }, []);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost)\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div>\n      <BlogPosts posts={currentPosts} loading={loading} />\n      <Pagination \n        postsPerPage={postsPerPage} \n        totalPosts={posts.length} \n        pagination={pagination} \n      />\n    </div>\n  );   \n}\n\nexport default FactsList;\n\n"]},"metadata":{},"sourceType":"module"}