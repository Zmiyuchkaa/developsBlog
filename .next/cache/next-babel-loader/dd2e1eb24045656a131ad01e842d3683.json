{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BlogPosts from './BlogPosts';\nimport Pagination from './Pagination';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    pagination: {\n      position: 'fixed',\n      bottom: 30\n    }\n  };\n});\n\nvar FactsList = function FactsList() {\n  _s();\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      posts = _React$useState2[0],\n      setPosts = _React$useState2[1];\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(1),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  var _useState3 = useState(10),\n      postsPerPage = _useState3[0];\n\n  useEffect(function () {\n    var fetchPosts = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setLoading(true);\n                _context.next = 3;\n                return axios.get(\"https://simple-blog-api.crew.red/posts\");\n\n              case 3:\n                res = _context.sent;\n                setPosts(res.data);\n                setLoading(false);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchPosts() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchPosts();\n  }, []); // React.useEffect(() => {\n  //   axios.get(`https://simple-blog-api.crew.red/posts`)\n  //     .then(response => {\n  //       setPosts(response.data);\n  //       console.log(response.data);\n  //     });\n  // }, []);\n\n  var indexOfLastPost = currentPage * postsPerPage;\n  var indexOfFirstPost = indexOfLastPost - postsPerPage;\n  var currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  var pagination = function pagination(pageNumber) {\n    return setCurrentPage(pageNumber);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(BlogPosts, {\n    posts: currentPosts,\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), __jsx(Pagination, {\n    postsPerPage: postsPerPage,\n    totalPosts: posts.length,\n    pagination: pagination,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(FactsList, \"YAH5lOdr70p62UB9M2g8h/QddFE=\", false, function () {\n  return [useStyles];\n});\n\n_c = FactsList;\nexport default FactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FactsList\");","map":{"version":3,"sources":["/Users/olenarolskaya/FE/developsBlog/components/Posts.tsx"],"names":["React","useEffect","useState","axios","makeStyles","BlogPosts","Pagination","useStyles","theme","pagination","position","bottom","FactsList","classes","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","fetchPosts","get","res","data","indexOfLastPost","indexOfFirstPost","currentPosts","slice","pageNumber","length"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAUA,SAAsBC,UAAtB,QAA8C,0BAA9C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAMC,SAAS,GAAGH,UAAU,CAAC,UAAAI,KAAK;AAAA,SAAK;AACrCC,IAAAA,UAAU,EAAE;AACRC,MAAAA,QAAQ,EAAE,OADF;AAERC,MAAAA,MAAM,EAAE;AAFA;AADyB,GAAL;AAAA,CAAN,CAA5B;;AASA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AACtB,MAAMC,OAAO,GAAGN,SAAS,EAAzB;;AADsB,wBAEIP,KAAK,CAACE,QAAN,CAAe,EAAf,CAFJ;AAAA;AAAA,MAEfY,KAFe;AAAA,MAERC,QAFQ;;AAAA,kBAGQb,QAAQ,CAAC,KAAD,CAHhB;AAAA,MAGfc,OAHe;AAAA,MAGNC,UAHM;;AAAA,mBAIgBf,QAAQ,CAAC,CAAD,CAJxB;AAAA,MAIfgB,WAJe;AAAA,MAIFC,cAJE;;AAAA,mBAKCjB,QAAQ,CAAC,EAAD,CALT;AAAA,MAKfkB,YALe;;AAOtBnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMoB,UAAU;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBJ,gBAAAA,UAAU,CAAC,IAAD,CAAV;AADiB;AAAA,uBAECd,KAAK,CAACmB,GAAN,CAAU,wCAAV,CAFD;;AAAA;AAEXC,gBAAAA,GAFW;AAGjBR,gBAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAL,CAAR;AACAP,gBAAAA,UAAU,CAAC,KAAD,CAAV;;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVI,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAMAA,IAAAA,UAAU;AACX,GARQ,EAQN,EARM,CAAT,CAPsB,CAiBtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMI,eAAe,GAAGP,WAAW,GAAGE,YAAtC;AACA,MAAMM,gBAAgB,GAAGD,eAAe,GAAGL,YAA3C;AACA,MAAMO,YAAY,GAAGb,KAAK,CAACc,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB;;AACA,MAAMhB,UAAU,GAAG,SAAbA,UAAa,CAAAoB,UAAU;AAAA,WAAIV,cAAc,CAACU,UAAD,CAAlB;AAAA,GAA7B;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,YAAlB;AAAgC,IAAA,OAAO,EAAEX,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,UAAD;AACE,IAAA,YAAY,EAAEI,YADhB;AAEE,IAAA,UAAU,EAAEN,KAAK,CAACgB,MAFpB;AAGE,IAAA,UAAU,EAAErB,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAUD,CAxCD;;GAAMG,S;UACYL,S;;;KADZK,S;AA0CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport ReactPaginate from 'react-paginate';\nimport {createStore} from \"../store/store\"\nimport { bindActionCreators } from 'redux';\nimport { connect } from \"react-redux\";\nimport { setPage, setPagePosts } from '../store/reducers/posts';\nimport { getPosts } from \"../utils/requests\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from \"@material-ui/core/Grid\";\nimport Post from \"./Post\";\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\nimport BlogPosts from './BlogPosts';\nimport Pagination from './Pagination';\n\nconst useStyles = makeStyles(theme => ({\n  pagination: {\n      position: 'fixed',\n      bottom: 30,\n  },\n  }),\n);\n\n\nconst FactsList = () => {\n  const classes = useStyles();\n  const [posts, setPosts] = React.useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(10);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.get(\"https://simple-blog-api.crew.red/posts\");\n      setPosts(res.data);\n      setLoading(false);\n    }\n    fetchPosts();\n  }, []); \n\n  // React.useEffect(() => {\n  //   axios.get(`https://simple-blog-api.crew.red/posts`)\n  //     .then(response => {\n  //       setPosts(response.data);\n  //       console.log(response.data);\n  //     });\n  // }, []);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost)\n  const pagination = pageNumber => setCurrentPage(pageNumber);\n\n  return (\n    <div>\n      <BlogPosts posts={currentPosts} loading={loading} />\n      <Pagination \n        postsPerPage={postsPerPage} \n        totalPosts={posts.length} \n        pagination={pagination} \n      />\n    </div>\n  );   \n}\n\nexport default FactsList;\n\n"]},"metadata":{},"sourceType":"module"}